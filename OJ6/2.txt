#include<iostream>
#include<vector>
#include<string>
#include<sstream>

using namespace std;

vector<vector<int>> a;
int n;
int* cover, * uncover;

void check_a() {
	for (int i = 0; i < a.size(); i++) {
		for (int j = 0; j < a[i].size(); j++) {
			cout << a[i][j] << ' ';
		}
		cout << endl;
	}
	return;
}

void SCOVER(int root) {
	cover[root] = 1;
	uncover[root] = 0;
	for (int i = 0; i < a[root].size(); i++) {
		int v = a[root][i];
		SCOVER(v);
		cover[root] += min(cover[v], uncover[v]);
		uncover[root] += cover[v];
	}
	return;
}

int main() {
	string s;
	while (!cin.eof()) {
		getline(cin, s);
		if (s == "-1")break;
		vector<int>tmp;
		int x;
		istringstream ist(s);
		ist >> x;
		while (ist >> x)
			tmp.push_back(x);
		a.push_back(tmp);
	}
	n = a.size();
	cover = new int[n];
	uncover = new int[n];
	fill(cover, cover + n, 0);
	fill(uncover, uncover + n, 0);

	//check_a();

	SCOVER(0);
	printf("I have read the rules about plagiarism punishment\n");
	printf("%d", min(cover[0], uncover[0]));
	return 0;
}

/*
0 1 2
1 3
2
3 4 5
4
5 6
6
-1
*/